zip_file(
    name = "ziptastic",
    srcs = glob(
        ["**/*"],
        excludes = ["BUCK"],
    ),
)

export_file(
    name = "source-jar",
    src = "source-1.0-sources.jar",
    out = "source-1.0-sources.jar",
)

java_library(
    name = "lib",
    srcs = ["A.java"],
)

zip_file(
    name = "inputbased",
    srcs = [":lib"],
)

zip_file(
    name = "unrolled",
    srcs = [":source-jar"],
)

zip_file(
    name = "zipsources",
    srcs = [
        "cake.txt",
        "source-2.0-sources.jar",
    ],
    zip_srcs = ["source-1.0-sources.jar"],
)

zip_file(
    name = "zipbreak",
    srcs = [
        "cake.txt",
        "source-1.0-sources.jar",
    ],
    merge_source_zips = False,
    zip_srcs = [":source-jar"],
)

zip_file(
    name = "excludeall",
    srcs = [
        "cake.txt",
        "source-1.0-sources.jar",
    ],
    entries_to_exclude = [
        "cake.txt",
        "menu.txt",
    ],
)

zip_file(
    name = "excludecake",
    srcs = [
        "cake.txt",
        "source-1.0-sources.jar",
    ],
    entries_to_exclude = ["ca.e.*"],
)

zip_file(
    name = "excludenothing",
    srcs = [
        "cake.txt",
        "source-1.0-sources.jar",
    ],
    entries_to_exclude = [
        "this.is.not.a.match",
        "neither.is.this",
    ],
)

zip_file(
    name = "excludesnothinginsubfolder",
    srcs = [
        "beans",
        "cake.txt",
    ],
)

zip_file(
    name = "excludesexactmatchinsubfolder",
    srcs = [
        "beans",
        "cake.txt",
    ],
    entries_to_exclude = [
        "beans/cheesy.txt",
    ],
)

zip_file(
    name = "exclude_from_zip",
    entries_to_exclude = [
        "cake.txt",
    ],
    zip_srcs = [
        ":ziptastic",
    ],
)

genrule(
    name = "copy",
    srcs = ["cake.txt"],
    out = "copy_out",
    cmd = "mkdir -p $OUT && cp $SRCS $OUT",
)

zip_file(
    name = "copy_zip",
    srcs = [
        ":copy",
    ],
)

zip_file(
    name = "zip1",
    srcs = [
        "cake.txt",
    ],
)

zip_file(
    name = "zip2",
    srcs = [
        "duplicates/cake.txt",
    ],
    flatten = True,
)

zip_file(
    name = "overwrite_duplicates",
    zip_srcs = [
        ":zip1",
        ":zip2",
    ],
)

zip_file(
    name = "overwrite_duplicates_in_different_order",
    zip_srcs = [
        ":zip2",
        ":zip1",
    ],
)
