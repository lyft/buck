{namespace buckconfig}

/**
 * @param name The name of the section.
 * @param description Some text describing the section.
 */
{template .section}
  <h2 id="{$name}">[{$name}] <a class="inline-link" href="#{$name}">#</a></h2>
  <p>
    {$description|noAutoescape}
  </p>
{/template}

/**
 * @param section The name of the section for this setting.
 * @param name The name of this setting.
 * @param description The description of this setting.
 * @param? example_value An example value for this setting.
 * @param? raw_example Raw HTML to show the example.
 * @param? deprecated Whether this setting has been deprecated
 * @param? deprecationAlternative An alternative to use rather than this deprecated setting. Can also include a link to the github deprecation announcement.
 * @param? preliminary Whether or not this setting is preliminary
 */
{template .entry}
  <h3 id="{$section}.{$name}">{$name} <a class="inline-link" href="#{$section}.{$name}">#</a></h3>
  {if $deprecated}
  <p class="warning-banner">
  This setting is deprecated. {if isNonnull($deprecationAlternative)}{$deprecationAlternative|noAutoescape}{/if}
  </p>
  {/if}
  {if $preliminary}
  <p class="warning-banner">
  This setting is preliminary and is likely to change.
  </p>
  {/if}

  <p>
    {$description|noAutoescape}
  </p>
  {if isNonnull($example_value)}
    <pre class="prettyprint lang-ini">
    [{$section}]{\n}{sp}{sp}
      {$name} = {$example_value}
    </pre>
  {/if}
  {if isNonnull($raw_example)}
    {$raw_example|noAutoescape}
  {/if}
{/template}

/**
 * @param section The section the entry is in.
 */
{template .section_link}
<a href="{ROOT}files-and-dirs/buckconfig.html#{$section}"><code>[{$section}]</code></a>
{/template}


/**
 * @param title Text for heading that appears in rendered content
 * @param id    ID string that is used to link to the heading. See
 *              .heading_link template.
 */
{template .section_concept_h2}
  <h2 id="{$id}">{$title}&nbsp;<a class="inline-link" href="#{$id}">#</a></h2>
{/template}

/**
 * @param id             ID string for the heading to link to. See .heading template.
 * @param rendered_text  The rendered text for the link.
 */
{template .section_concept_link}
  <a href="#{$id}"><strong>{$rendered_text}</strong></a><br>
{/template}


/***/
{template .dx_threads}
{call .entry_link}
  {param section : 'dx' /}
  {param entry : 'threads' /}
{/call}
{/template}

/***/
{template .httpserver}
{call .section_link}
  {param section: 'httpserver' /}
{/call}
{/template}

/***/
{template .maven_repositories}
{call .section_link}
  {param section: 'maven_repositories' /}
{/call}
{/template}

/**
 * @param section The section the entry is in.
 * @param entry The name of the entry to link to.
 * @param? link_text The text of the link
 */
{template .entry_link}
<a href="{ROOT}files-and-dirs/buckconfig.html#{$section}.{$entry}">{if isNonnull($link_text)}{$link_text}{else}<code>[{$section}].{$entry}</code>{/if}</a>
{/template}

/***/
{template .apple_device_helper_path}
{call .entry_link}
  {param section : 'apple' /}
  {param entry : 'device_helper_path' /}
{/call}
{/template}

/***/
{template .apple_xctool_path}
{call .entry_link}
  {param section : 'apple' /}
  {param entry : 'xctool_path' /}
{/call}
{/template}

/***/
{template .apple_xctool_zip_target}
{call .entry_link}
  {param section: 'apple' /}
  {param entry: 'xctool_zip_target' /}
{/call}
{/template}

/***/
{template .apple_package_command}
{call .entry_link}
  {param section: 'apple' /}
  {param entry: '*_package_command' /}
{/call}
{/template}

/***/
{template .apple_package_extension}
{call .entry_link}
  {param section: 'apple' /}
  {param entry: '*_package_extension' /}
{/call}
{/template}

/***/
{template .apple_toolchains_override}
{call .entry_link}
  {param section: 'apple' /}
  {param entry: '*_toolchains_override' /}
{/call}
{/template}

/***/
{template .apple_replacement}
{call .entry_link}
  {param section: 'apple' /}
  {param entry: '*_replacement' /}
{/call}
{/template}

/***/
{template .apple_xcode_tool_name_override}
{call .entry_link}
  {param section: 'apple' /}
  {param entry: '*_xcode_tool_name_override' /}
{/call}
{/template}

/***/
{template .build_depfiles}
{call .entry_link}
  {param section: 'build' /}
  {param entry: 'depfiles' /}
{/call}
{/template}

/***/
{template .build_threads}
{call .entry_link}
  {param section: 'build' /}
  {param entry: 'threads' /}
{/call}
{/template}

/***/
{template .buildfile_includes}
{call .entry_link}
  {param section: 'buildfile' /}
  {param entry: 'includes' /}
{/call}
{/template}

/***/
{template .cache}
{call .section_link}
  {param section: 'cache' /}
{/call}
{/template}

/***/
{template .cache_mode}
{call .entry_link}
  {param section: 'cache' /}
  {param entry: 'mode' /}
{/call}
{/template}

/***/
{template .cache_serve_local_cache}
{call .entry_link}
  {param section: 'cache' /}
  {param entry: 'serve_local_cache' /}
{/call}
{/template}

/***/
{template .cxx_gtest_dep}
{call .entry_link}
  {param section: 'cxx' /}
  {param entry: 'gtest_dep' /}
{/call}
{/template}

/***/
{template .should_remap_host_platform}
{call .entry_link}
  {param section: 'cxx' /}
  {param entry: 'should_remap_host_platform' /}
{/call}
{/template}

/***/
{template .host_platform}
{call .entry_link}
  {param section: 'cxx' /}
  {param entry: 'host_platform' /}
{/call}
{/template}

/***/
{template .kotlin_kotlinc}
{call .entry_link}
  {param section: 'kotlin' /}
  {param entry: 'kotlinc' /}
{/call}
{/template}

/***/
{template .kotlin_external}
{call .entry_link}
  {param section: 'kotlin' /}
  {param entry: 'external' /}
{/call}
{/template}

/***/
{template .kotlin_kotlin_home}
{call .entry_link}
  {param section: 'kotlin' /}
  {param entry: 'kotlin_home' /}
{/call}
{/template}

/***/
{template .lua_cxx_library}
{call .entry_link}
    {param section: 'lua' /}
    {param entry: 'cxx_library' /}
{/call}
{/template}

/***/
{template .ndk_compiler}
{call .entry_link}
    {param section: 'ndk' /}
    {param entry: 'compiler' /}
{/call}
{/template}

/***/
{template .project_parallel_parsing}
{call .entry_link}
    {param section: 'project' /}
    {param entry: 'parallel_parsing' /}
{/call}
{/template}

/***/
{template .project_ignore}
{call .entry_link}
    {param section: 'project' /}
    {param entry: 'ignore' /}
{/call}
{/template}

/***/
{template .python}
{call .section_link}
  {param section: 'python' /}
{/call}
{/template}

/***/
{template .python_interpreter}
{call .entry_link}
    {param section: 'python' /}
    {param entry: 'interpreter' /}
{/call}
{/template}

/***/
{template .python_package_style}
{call .entry_link}
    {param section: 'python' /}
    {param entry: 'package_style' /}
{/call}
{/template}

/***/
{template .repositories}
{call .section_link}
  {param section: 'repositories' /}
{/call}
{/template}

/***/
{template .test_rule_timeout}
{call .entry_link}
    {param section: 'test' /}
    {param entry: 'rule_timeout' /}
{/call}
{/template}

/***/
{template .test_external_runner}
{call .entry_link}
    {param section: 'test' /}
    {param entry: 'external_runner' /}
{/call}
{/template}

/***/
{template .test_threads}
{call .entry_link}
    {param section: 'test' /}
    {param entry: 'threads' /}
{/call}
{/template}

/***/
{template .thrift_compiler}
{call .entry_link}
    {param section: 'thrift' /}
    {param entry: 'compiler' /}
{/call}
{/template}

/***/
{template .ui_thread_line_limit}
{call .entry_link}
    {param section: 'ui' /}
    {param entry: 'thread_line_limit' /}
{/call}
{/template}

/***/
{template .tools_javac}
{call buckconfig.entry_link}
  {param section: 'tools' /}
  {param entry: 'javac' /}
{/call}
{/template}

/***/
{template .tools_java_jar}
{call buckconfig.entry_link}
  {param section: 'tools' /}
  {param entry: 'java_jar' /}
{/call}
{/template}

/***/
{template .alias}
{call .section_link}
  {param section: 'alias' /}
{/call}
{/template}

/***/
{template .java_src_roots}
{call .entry_link}
    {param section: 'java' /}
    {param entry: 'src_roots' /}
{/call}
{/template}

/***/
{template .java_abi_generation_mode}
{call .entry_link}
    {param section: 'java' /}
    {param entry: 'abi_generation_mode' /}
{/call}
{/template}

/***/
{template .android_build_tools_version}
{call .entry_link}
    {param section: 'android' /}
    {param entry: 'build_tools_version' /}
{/call}
{/template}

/***/
{template .android_target}
{call .entry_link}
    {param section: 'android' /}
    {param entry: 'target' /}
{/call}
{/template}

/***/
{template .android_sdk_path}
{call .entry_link}
    {param section: 'android' /}
    {param entry: 'sdk_path' /}
{/call}
{/template}

/***/
{template .ndk_version}
{call .entry_link}
    {param section: 'ndk' /}
    {param entry: 'ndk_version' /}
{/call}
{/template}

/***/
{template .go_vendor_path}
{call buckconfig.entry_link}
  {param section: 'go' /}
  {param entry: 'vendor_path' /}
{/call}
{/template}

/***/
{template .ndk_path}
{call .entry_link}
    {param section: 'ndk' /}
    {param entry: 'ndk_path' /}
{/call}
{/template}

/***/
{template .ndk_repository_path}
{call .entry_link}
    {param section: 'ndk' /}
    {param entry: 'ndk_repository_path' /}
{/call}
{/template}

/***/
{template .default_android_manifest_path}
{call .entry_link}
    {param section: 'intellij' /}
    {param entry: 'default_android_manifest_path' /}
{/call}
{/template}

/***/
{template .generate_android_manifest}
{call .entry_link}
    {param section: 'intellij' /}
    {param entry: 'generate_android_manifest' /}
{/call}
{/template}

/***/
{template .python_native_link_strategy}
{call .entry_link}
  {param section: 'python' /}
  {param entry: 'native_link_strategy' /}
{/call}
{/template}

/***/
{template .download_in_build}
{call .entry_link}
  {param section: 'download' /}
  {param entry: 'in_build' /}
{/call}
{/template}

{/namespace}
